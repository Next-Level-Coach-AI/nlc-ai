name: nlc-ai-services
services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  db_init:
    image: postgres:16
    container_name: db_init
    depends_on:
      - postgres
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    entrypoint: [ "bash", "-lc" ]
    command: >-
      "until pg_isready -h postgres -p 5432 -U ${POSTGRES_USER}; do sleep 1; done;
      psql -h postgres -U ${POSTGRES_USER} -d postgres -c 'CREATE DATABASE ${POSTGRES_SHADOW_DB};' || true"
    restart: "no"

  gateway:
    build:
      context: .
      dockerfile: ./apps/api/gateway/dev.Dockerfile
    container_name: gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "5555:5555"
    depends_on:
      - postgres
      - rabbitmq
      - db_init
#      - db_migrate
    volumes:
      - ./apps/api/gateway:/app/apps/api/gateway
      - ./libs/api:/app/libs/api
      - ./.env:/app/.env
      - /app/node_modules

  agents:
    build:
      context: .
      dockerfile: ./apps/api/agents/dev.Dockerfile
    container_name: agents
    restart: unless-stopped
    ports:
      - "3011:3011"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./apps/api/agents:/app/apps/api/agents
      - ./libs/types:/app/libs/types
      - ./libs/api:/app/libs/api
      - ./.env:/app/.env
      - /app/node_modules

  analytics:
    build:
      context: .
      dockerfile: ./apps/api/analytics/dev.Dockerfile
    container_name: analytics
    restart: unless-stopped
    ports:
      - "3010:3010"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./apps/api/analytics:/app/apps/api/analytics
      - ./libs/api:/app/libs/api
      - ./.env:/app/.env
      - /app/node_modules

  auth:
    build:
      context: .
      dockerfile: ./apps/api/auth/dev.Dockerfile
    container_name: auth
    restart: unless-stopped
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./apps/api/auth:/app/apps/api/auth
      - ./libs/api:/app/libs/api
      - ./.env:/app/.env
      - /app/node_modules

  billing:
    build:
      context: .
      dockerfile: ./apps/api/billing/dev.Dockerfile
    container_name: billing
    restart: unless-stopped
    ports:
      - "3005:3005"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./apps/api/billing:/app/apps/api/billing
      - ./libs/api:/app/libs/api
      - ./libs/types:/app/libs/types
      - ./.env:/app/.env
      - /app/node_modules

  messaging:
    build:
      context: .
      dockerfile: apps/api/messaging/dev.Dockerfile
    container_name: messaging
    restart: unless-stopped
    ports:
      - "3012:3012"
    depends_on:
      - postgres
      - rabbitmq
    #      - db_init
    #      - db_migrate
    volumes:
      - ./apps/api/messaging:/app/apps/api/messaging
      - ./libs/api:/app/libs/api
      #      - ./nx.json:/app/nx.json
      #      - ./tsconfig.json:/app/tsconfig.json
      #      - ./tsconfig.base.json:/app/tsconfig.base.json
      - ./.env:/app/.env
      - /app/node_modules

  community:
    build:
      context: .
      dockerfile: ./apps/api/community/dev.Dockerfile
    container_name: community
    restart: unless-stopped
    ports:
      - "3009:3009"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./apps/api/community:/app/apps/api/community
      - ./libs/api:/app/libs/api
      - ./.env:/app/.env
      - /app/node_modules

  course:
    build:
      context: .
      dockerfile: ./apps/api/course/dev.Dockerfile
    container_name: course
    restart: unless-stopped
    ports:
      - "3013:3013"
    depends_on:
      - postgres
      - rabbitmq
    #      - db_init
    #      - db_migrate
    volumes:
      - ./apps/api/course:/app/apps/api/course
      - ./libs/api:/app/libs/api
      #      - ./nx.json:/app/nx.json
      #      - ./tsconfig.json:/app/tsconfig.json
      #      - ./tsconfig.base.json:/app/tsconfig.base.json
      - ./.env:/app/.env
      - /app/node_modules

  email:
    build:
      context: .
      dockerfile: ./apps/api/email/dev.Dockerfile
    container_name: email
    restart: unless-stopped
    ports:
      - "3004:3004"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    volumes:
      - ./apps/api/email:/app/apps/api/email
      - ./libs/api:/app/libs/api
      - ./.env:/app/.env
      - /app/node_modules

  integrations:
    build:
      context: .
      dockerfile: ./apps/api/integrations/dev.Dockerfile
    container_name: integrations
    restart: unless-stopped
    ports:
      - "3008:3008"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./apps/api/integrations:/app/apps/api/integrations
      - ./libs/api:/app/libs/api
      - ./.env:/app/.env
      - /app/node_modules

  leads:
    build:
      context: .
      dockerfile: ./apps/api/leads/dev.Dockerfile
    container_name: leads
    restart: unless-stopped
    ports:
      - "3006:3006"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./apps/api/leads:/app/apps/api/leads
      - ./libs/api:/app/libs/api
      - ./.env:/app/.env
      - /app/node_modules

  media:
    build:
      context: .
      dockerfile: ./apps/api/media/dev.Dockerfile
    container_name: media
    restart: unless-stopped
    ports:
      - "3003:3003"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./apps/api/media:/app/apps/api/media
      - ./libs/api:/app/libs/api
      - ./.env:/app/.env
      - /app/node_modules

  notifications:
    build:
      context: .
      dockerfile: ./apps/api/notifications/dev.Dockerfile
    container_name: notifications
    restart: unless-stopped
    ports:
      - "3007:3007"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./apps/api/notifications:/app/apps/api/notifications
      - ./libs/api:/app/libs/api
      - ./.env:/app/.env
      - /app/node_modules

  users:
    build:
      context: .
      dockerfile: ./apps/api/users/dev.Dockerfile
    container_name: users
    restart: unless-stopped
    ports:
      - "3002:3002"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./apps/api/users:/app/apps/api/users
      - ./libs/api:/app/libs/api
      - ./.env:/app/.env
      - /app/node_modules

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local
