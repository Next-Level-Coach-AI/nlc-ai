name: "NLC AI Dev"
services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # One-off init job to create an extra DB in the primary Postgres (optional)
  db_init:
    image: postgres:16
    container_name: db_init
    depends_on:
      - postgres
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    entrypoint: [ "bash", "-lc" ]
    command: >-
      "until pg_isready -h postgres -p 5432 -U ${POSTGRES_USER}; do sleep 1; done;
      psql -h postgres -U ${POSTGRES_USER} -d postgres -c 'CREATE DATABASE ${POSTGRES_SHADOW_DB};' || true"
    restart: "no"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # Database migration service - runs once to apply migrations
#  db_migrate:
#    build:
#      context: .
#      dockerfile: ./apps/api/gateway/Dockerfile
#    container_name: db_migrate
#    depends_on:
#      - postgres
#      - db_init
#    environment:
#      - NODE_ENV=development
#    volumes:
#      - ./.env:/app/.env
#      - ./libs/api:/app/libs/api
#    command: ["npm", "run", "db:deploy"]
#    restart: "no"

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
