generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admins {
  id            String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email         String          @unique @db.VarChar(255)
  password_hash String          @db.VarChar(255)
  first_name    String          @db.VarChar(100)
  last_name     String          @db.VarChar(100)
  role          String?         @default("admin") @db.VarChar(50)
  is_active     Boolean?        @default(true)
  last_login_at DateTime?       @db.Timestamptz(6)
  created_at    DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?       @default(now()) @db.Timestamptz(6)
  notifications notifications[]
}

model ai_agents {
  id              String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name            String            @db.VarChar(100)
  type            String            @db.VarChar(50)
  description     String?
  is_active       Boolean?          @default(true)
  default_config  Json?             @default("{}")
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @default(now()) @db.Timestamptz(6)
  ai_interactions ai_interactions[]
  coach_ai_agents coach_ai_agents[]
}

model ai_interactions {
  id                 String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id           String    @db.Uuid
  agent_id           String    @db.Uuid
  client_id          String?   @db.Uuid
  interaction_type   String    @db.VarChar(50)
  input_data         Json
  output_data        Json
  tokens_used        Int?      @default(0)
  processing_time_ms Int?
  confidence_score   Decimal?  @db.Decimal(3, 2)
  status             String?   @default("completed") @db.VarChar(50)
  error_message      String?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  ai_agents          ai_agents @relation(fields: [agent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  clients            clients?  @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  coaches            coaches   @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([agent_id], map: "idx_ai_interactions_agent_id")
  @@index([coach_id], map: "idx_ai_interactions_coach_id")
  @@index([created_at], map: "idx_ai_interactions_created_at")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model clients {
  id                  String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id            String               @db.Uuid
  email               String               @db.VarChar(255)
  first_name          String               @db.VarChar(100)
  last_name           String               @db.VarChar(100)
  phone               String?              @db.VarChar(20)
  avatar_url          String?
  status              String?              @default("active") @db.VarChar(50)
  source              String?              @db.VarChar(100)
  tags                String[]
  last_interaction_at DateTime?            @db.Timestamptz(6)
  total_interactions  Int?                 @default(0)
  engagement_score    Decimal?             @default(0.00) @db.Decimal(3, 2)
  custom_fields       Json?                @default("{}")
  created_at          DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?            @default(now()) @db.Timestamptz(6)
  ai_interactions     ai_interactions[]
  coaches             coaches              @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  course_enrollments  course_enrollments[]
  email_threads       email_threads[]

  @@unique([coach_id, email])
  @@index([coach_id], map: "idx_clients_coach_id")
  @@index([email], map: "idx_clients_email")
  @@index([last_interaction_at], map: "idx_clients_last_interaction")
  @@index([status], map: "idx_clients_status")
}

model coach_ai_agents {
  id                  String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id            String    @db.Uuid
  agent_id            String    @db.Uuid
  is_enabled          Boolean?  @default(true)
  custom_config       Json?     @default("{}")
  fine_tuned_model_id String?   @db.VarChar(255)
  total_requests      Int?      @default(0)
  total_tokens_used   BigInt?   @default(0)
  last_used_at        DateTime? @db.Timestamptz(6)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)
  ai_agents           ai_agents @relation(fields: [agent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  coaches             coaches   @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([coach_id, agent_id])
}

model coaches {
  id                   String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email                String                @unique @db.VarChar(255)
  password_hash        String?               @db.VarChar(255)
  first_name           String                @db.VarChar(100)
  last_name            String                @db.VarChar(100)
  business_name        String?               @db.VarChar(255)
  phone                String?               @db.VarChar(20)
  avatar_url           String?
  bio                  String?
  website_url          String?
  timezone             String?               @default("UTC") @db.VarChar(50)
  subscription_status  String?               @default("trial") @db.VarChar(50)
  subscription_plan    String?               @db.VarChar(50)
  subscription_ends_at DateTime?             @db.Timestamptz(6)
  stripe_customer_id   String?               @db.VarChar(255)
  is_active            Boolean?              @default(true)
  is_verified          Boolean?              @default(false)
  last_login_at        DateTime?             @db.Timestamptz(6)
  onboarding_completed Boolean?              @default(false)
  created_at           DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?             @default(now()) @db.Timestamptz(6)
  ai_interactions      ai_interactions[]
  clients              clients[]
  coach_ai_agents      coach_ai_agents[]
  content_pieces       content_pieces[]
  content_suggestions  content_suggestions[]
  courses              courses[]
  daily_kpis           daily_kpis[]
  email_accounts       email_accounts[]
  email_templates      email_templates[]
  email_threads        email_threads[]
  integrations         integrations[]
  notifications        notifications[]

  @@index([created_at], map: "idx_coaches_created_at")
  @@index([email], map: "idx_coaches_email")
  @@index([subscription_status], map: "idx_coaches_subscription_status")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model content_pieces {
  id                     String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id               String    @db.Uuid
  title                  String    @db.VarChar(500)
  content_type           String    @db.VarChar(50)
  platform               String?   @db.VarChar(50)
  platform_id            String?   @db.VarChar(255)
  url                    String?
  description            String?
  tags                   String[]
  thumbnail_url          String?
  duration_seconds       Int?
  views                  Int?      @default(0)
  likes                  Int?      @default(0)
  comments               Int?      @default(0)
  shares                 Int?      @default(0)
  engagement_rate        Decimal?  @default(0.00) @db.Decimal(5, 2)
  ai_analyzed            Boolean?  @default(false)
  performance_prediction Decimal?  @db.Decimal(3, 2)
  topic_categories       String[]
  suggested_improvements Json?     @default("[]")
  status                 String?   @default("draft") @db.VarChar(50)
  published_at           DateTime? @db.Timestamptz(6)
  created_at             DateTime? @default(now()) @db.Timestamptz(6)
  updated_at             DateTime? @default(now()) @db.Timestamptz(6)
  coaches                coaches   @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([coach_id], map: "idx_content_pieces_coach_id")
  @@index([content_type], map: "idx_content_pieces_content_type")
  @@index([published_at], map: "idx_content_pieces_published_at")
}

model content_suggestions {
  id               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id         String    @db.Uuid
  title            String    @db.VarChar(500)
  content_type     String    @db.VarChar(50)
  platform         String?   @db.VarChar(50)
  description      String?
  reasoning        String?
  prompt_used      String?
  confidence_score Decimal?  @db.Decimal(3, 2)
  trend_data       Json?     @default("{}")
  status           String?   @default("pending") @db.VarChar(50)
  feedback         String?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  coaches          coaches   @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model course_enrollments {
  id                       String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  course_id                String    @db.Uuid
  client_id                String    @db.Uuid
  enrolled_at              DateTime? @default(now()) @db.Timestamptz(6)
  started_at               DateTime? @db.Timestamptz(6)
  completed_at             DateTime? @db.Timestamptz(6)
  progress_percentage      Decimal?  @default(0.00) @db.Decimal(5, 2)
  current_module           Int?      @default(1)
  modules_completed        Int?      @default(0)
  last_activity_at         DateTime? @db.Timestamptz(6)
  total_time_spent_minutes Int?      @default(0)
  login_count              Int?      @default(0)
  days_since_last_login    Int?      @default(0)
  status                   String?   @default("active") @db.VarChar(50)
  dropout_risk_score       Decimal?  @default(0.00) @db.Decimal(3, 2)
  recommended_actions      Json?     @default("[]")
  created_at               DateTime? @default(now()) @db.Timestamptz(6)
  updated_at               DateTime? @default(now()) @db.Timestamptz(6)
  clients                  clients   @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  courses                  courses   @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([course_id, client_id])
  @@index([client_id], map: "idx_course_enrollments_client_id")
  @@index([course_id], map: "idx_course_enrollments_course_id")
  @@index([status], map: "idx_course_enrollments_status")
}

model courses {
  id                       String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id                 String               @db.Uuid
  title                    String               @db.VarChar(255)
  description              String?
  category                 String?              @db.VarChar(100)
  difficulty_level         String?              @db.VarChar(50)
  platform                 String?              @db.VarChar(50)
  platform_course_id       String?              @db.VarChar(255)
  platform_url             String?
  total_modules            Int?                 @default(0)
  estimated_duration_hours Int?
  total_enrollments        Int?                 @default(0)
  active_enrollments       Int?                 @default(0)
  completion_rate          Decimal?             @default(0.00) @db.Decimal(5, 2)
  is_active                Boolean?             @default(true)
  created_at               DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?            @default(now()) @db.Timestamptz(6)
  course_enrollments       course_enrollments[]
  coaches                  coaches              @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([coach_id], map: "idx_courses_coach_id")
}

model daily_kpis {
  id                       String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id                 String    @db.Uuid
  date                     DateTime  @db.Date
  total_clients            Int?      @default(0)
  new_clients              Int?      @default(0)
  churned_clients          Int?      @default(0)
  active_clients           Int?      @default(0)
  total_interactions       Int?      @default(0)
  avg_engagement_score     Decimal?  @default(0.00) @db.Decimal(5, 2)
  content_pieces_published Int?      @default(0)
  total_content_views      Int?      @default(0)
  avg_content_engagement   Decimal?  @default(0.00) @db.Decimal(5, 2)
  new_enrollments          Int?      @default(0)
  course_completions       Int?      @default(0)
  avg_course_progress      Decimal?  @default(0.00) @db.Decimal(5, 2)
  ai_requests              Int?      @default(0)
  ai_tokens_used           Int?      @default(0)
  emails_sent              Int?      @default(0)
  emails_opened            Int?      @default(0)
  emails_clicked           Int?      @default(0)
  created_at               DateTime? @default(now()) @db.Timestamptz(6)
  coaches                  coaches   @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([coach_id, date])
  @@index([coach_id, date], map: "idx_daily_kpis_coach_id_date")
}

model email_accounts {
  id               String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id         String          @db.Uuid
  email_address    String          @db.VarChar(255)
  provider         String          @db.VarChar(50)
  access_token     String?
  refresh_token    String?
  token_expires_at DateTime?       @db.Timestamptz(6)
  is_primary       Boolean?        @default(false)
  is_active        Boolean?        @default(true)
  sync_enabled     Boolean?        @default(true)
  last_sync_at     DateTime?       @db.Timestamptz(6)
  created_at       DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?       @default(now()) @db.Timestamptz(6)
  coaches          coaches         @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  email_threads    email_threads[]

  @@unique([coach_id, email_address])
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model email_messages {
  id                String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  thread_id         String        @db.Uuid
  message_id        String        @db.VarChar(255)
  sender_email      String        @db.VarChar(255)
  recipient_emails  String[]
  cc_emails         String[]
  bcc_emails        String[]
  subject           String?       @db.VarChar(500)
  body_text         String?
  body_html         String?
  attachments       Json?         @default("[]")
  ai_processed      Boolean?      @default(false)
  sentiment_score   Decimal?      @db.Decimal(3, 2)
  intent_category   String?       @db.VarChar(100)
  suggested_actions Json?         @default("[]")
  sent_at           DateTime      @db.Timestamptz(6)
  received_at       DateTime?     @default(now()) @db.Timestamptz(6)
  created_at        DateTime?     @default(now()) @db.Timestamptz(6)
  email_threads     email_threads @relation(fields: [thread_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sent_at], map: "idx_email_messages_sent_at")
  @@index([thread_id], map: "idx_email_messages_thread_id")
}

model email_templates {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id          String    @db.Uuid
  name              String    @db.VarChar(255)
  category          String?   @db.VarChar(100)
  subject_template  String?   @db.VarChar(500)
  body_template     String
  is_ai_generated   Boolean?  @default(false)
  generation_prompt String?
  usage_count       Int?      @default(0)
  last_used_at      DateTime? @db.Timestamptz(6)
  is_active         Boolean?  @default(true)
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
  coaches           coaches   @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model email_threads {
  id               String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id         String           @db.Uuid
  client_id        String?          @db.Uuid
  email_account_id String           @db.Uuid
  thread_id        String           @db.VarChar(255)
  subject          String?          @db.VarChar(500)
  participants     String[]
  status           String?          @default("active") @db.VarChar(50)
  is_read          Boolean?         @default(false)
  priority         String?          @default("normal") @db.VarChar(20)
  message_count    Int?             @default(0)
  last_message_at  DateTime?        @db.Timestamptz(6)
  created_at       DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?        @default(now()) @db.Timestamptz(6)
  email_messages   email_messages[]
  clients          clients?         @relation(fields: [client_id], references: [id], onUpdate: NoAction)
  coaches          coaches          @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  email_accounts   email_accounts   @relation(fields: [email_account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([client_id], map: "idx_email_threads_client_id")
  @@index([coach_id], map: "idx_email_threads_coach_id")
}

model integrations {
  id               String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id         String           @db.Uuid
  integration_type String           @db.VarChar(50)
  platform_name    String           @db.VarChar(100)
  access_token     String?
  refresh_token    String?
  token_expires_at DateTime?        @db.Timestamptz(6)
  api_key          String?
  webhook_secret   String?          @db.VarChar(255)
  config           Json?            @default("{}")
  sync_settings    Json?            @default("{}")
  is_active        Boolean?         @default(true)
  last_sync_at     DateTime?        @db.Timestamptz(6)
  sync_error       String?
  created_at       DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?        @default(now()) @db.Timestamptz(6)
  coaches          coaches          @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  webhook_events   webhook_events[]

  @@index([coach_id], map: "idx_integrations_coach_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model notifications {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  coach_id   String?   @db.Uuid
  admin_id   String?   @db.Uuid
  type       String    @db.VarChar(50)
  title      String    @db.VarChar(255)
  message    String
  action_url String?
  is_read    Boolean?  @default(false)
  read_at    DateTime? @db.Timestamptz(6)
  priority   String?   @default("normal") @db.VarChar(20)
  metadata   Json?     @default("{}")
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  admins     admins?   @relation(fields: [admin_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  coaches    coaches?  @relation(fields: [coach_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([admin_id], map: "idx_notifications_admin_id")
  @@index([coach_id], map: "idx_notifications_coach_id")
  @@index([is_read], map: "idx_notifications_is_read")
}

model platform_analytics {
  id                        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  date                      DateTime  @unique @db.Date
  total_coaches             Int?      @default(0)
  active_coaches            Int?      @default(0)
  new_coaches               Int?      @default(0)
  churned_coaches           Int?      @default(0)
  total_revenue             Decimal?  @default(0.00) @db.Decimal(12, 2)
  monthly_recurring_revenue Decimal?  @default(0.00) @db.Decimal(12, 2)
  churn_rate                Decimal?  @default(0.00) @db.Decimal(5, 2)
  total_ai_requests         Int?      @default(0)
  total_ai_tokens           Int?      @default(0)
  total_emails_processed    Int?      @default(0)
  avg_response_time_ms      Int?      @default(0)
  uptime_percentage         Decimal?  @default(100.00) @db.Decimal(5, 2)
  created_at                DateTime? @default(now()) @db.Timestamptz(6)

  @@index([date], map: "idx_platform_analytics_date")
}

model webhook_events {
  id              String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  integration_id  String?       @db.Uuid
  event_type      String        @db.VarChar(100)
  event_data      Json
  source_platform String        @db.VarChar(100)
  status          String?       @default("pending") @db.VarChar(50)
  processed_at    DateTime?     @db.Timestamptz(6)
  error_message   String?
  retry_count     Int?          @default(0)
  created_at      DateTime?     @default(now()) @db.Timestamptz(6)
  integrations    integrations? @relation(fields: [integration_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([integration_id], map: "idx_webhook_events_integration_id")
  @@index([status], map: "idx_webhook_events_status")
}
